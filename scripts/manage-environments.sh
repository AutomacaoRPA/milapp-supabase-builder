#!/bin/bash

# Script para gerenciar ambientes MILAPP
echo "üîß Gerenciador de Ambientes MILAPP"
echo "=================================="

# Fun√ß√£o para mostrar menu
show_menu() {
    echo ""
    echo "Escolha uma op√ß√£o:"
    echo "1) Iniciar ambiente de Staging/Demo"
    echo "2) Iniciar ambiente de Produ√ß√£o"
    echo "3) Parar ambiente de Staging/Demo"
    echo "4) Parar ambiente de Produ√ß√£o"
    echo "5) Parar todos os ambientes"
    echo "6) Status dos ambientes"
    echo "7) Logs do ambiente de Staging"
    echo "8) Logs do ambiente de Produ√ß√£o"
    echo "9) Backup de dados"
    echo "10) Limpar volumes (CUIDADO!)"
    echo "0) Sair"
    echo ""
}

# Fun√ß√£o para iniciar staging
start_staging() {
    echo "üöÄ Iniciando ambiente de Staging/Demo..."
    ./start-staging.sh
}

# Fun√ß√£o para iniciar produ√ß√£o
start_production() {
    echo "üöÄ Iniciando ambiente de Produ√ß√£o..."
    ./start-production.sh
}

# Fun√ß√£o para parar staging
stop_staging() {
    echo "üõë Parando ambiente de Staging/Demo..."
    docker-compose -f ../docker-compose.staging.yml down
    echo "‚úÖ Ambiente de Staging/Demo parado"
}

# Fun√ß√£o para parar produ√ß√£o
stop_production() {
    echo "üõë Parando ambiente de Produ√ß√£o..."
    docker-compose -f ../docker-compose.production.yml down
    echo "‚úÖ Ambiente de Produ√ß√£o parado"
}

# Fun√ß√£o para parar todos
stop_all() {
    echo "üõë Parando todos os ambientes..."
    docker-compose -f ../docker-compose.staging.yml down
    docker-compose -f ../docker-compose.production.yml down
    echo "‚úÖ Todos os ambientes parados"
}

# Fun√ß√£o para mostrar status
show_status() {
    echo "üìä Status dos Ambientes"
    echo "======================"
    
    echo ""
    echo "üîç Ambiente de Staging/Demo:"
    docker-compose -f ../docker-compose.staging.yml ps 2>/dev/null || echo "   N√£o est√° rodando"
    
    echo ""
    echo "üîç Ambiente de Produ√ß√£o:"
    docker-compose -f ../docker-compose.production.yml ps 2>/dev/null || echo "   N√£o est√° rodando"
    
    echo ""
    echo "üåê Portas em uso:"
    netstat -tuln | grep -E ":(3000|3001|8000|8001|8501|8502|9090|9091|6379|6380|9000|9001|9002|9003)" || echo "   Nenhuma porta em uso"
}

# Fun√ß√£o para mostrar logs
show_logs() {
    local environment=$1
    echo "üìù Logs do ambiente $environment"
    echo "Pressione Ctrl+C para sair"
    echo ""
    
    if [ "$environment" = "staging" ]; then
        docker-compose -f ../docker-compose.staging.yml logs -f
    elif [ "$environment" = "production" ]; then
        docker-compose -f ../docker-compose.production.yml logs -f
    fi
}

# Fun√ß√£o para backup
backup_data() {
    echo "üíæ Iniciando backup de dados..."
    ./backup.sh
}

# Fun√ß√£o para limpar volumes
clean_volumes() {
    echo "‚ö†Ô∏è  ATEN√á√ÉO: Esta opera√ß√£o ir√° remover TODOS os dados!"
    read -p "Voc√™ tem certeza? Digite 'SIM' para confirmar: " -r
    if [[ $REPLY =~ ^SIM$ ]]; then
        echo "üóëÔ∏è Removendo volumes..."
        docker-compose -f ../docker-compose.staging.yml down -v
        docker-compose -f ../docker-compose.production.yml down -v
        docker volume prune -f
        echo "‚úÖ Volumes removidos"
    else
        echo "‚ùå Opera√ß√£o cancelada"
    fi
}

# Loop principal
while true; do
    show_menu
    read -p "Digite sua op√ß√£o: " -r choice
    
    case $choice in
        1)
            start_staging
            ;;
        2)
            start_production
            ;;
        3)
            stop_staging
            ;;
        4)
            stop_production
            ;;
        5)
            stop_all
            ;;
        6)
            show_status
            ;;
        7)
            show_logs "staging"
            ;;
        8)
            show_logs "production"
            ;;
        9)
            backup_data
            ;;
        10)
            clean_volumes
            ;;
        0)
            echo "üëã Saindo..."
            exit 0
            ;;
        *)
            echo "‚ùå Op√ß√£o inv√°lida"
            ;;
    esac
    
    echo ""
    read -p "Pressione Enter para continuar..."
done 